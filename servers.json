{
  "servers": [
    {
      "id": "supabase",
      "name": "Supabase MCP",
      "type": "database",
      "description": "Supabase MCP server for database operations, authentication, and real-time subscriptions. Provides tools for managing projects, executing SQL, handling auth, and more.",
      "command": "npx",
      "args": ["@supabase/mcp-server"],
      "tools": [
        "list_projects",
        "get_project",
        "create_project",
        "execute_sql",
        "list_tables",
        "get_project_url",
        "get_anon_key"
      ]
    },
    {
      "id": "context7",
      "name": "Context7 MCP",
      "type": "documentation",
      "description": "Context7 MCP server for accessing up-to-date library documentation and code examples. Helps with finding relevant documentation for popular libraries and frameworks.",
      "command": "npx",
      "args": ["@context7/mcp-server"],
      "tools": [
        "resolve-library-id",
        "get-library-docs"
      ]
    },
    {
      "id": "github",
      "name": "GitHub MCP",
      "type": "version_control",
      "description": "GitHub MCP server for repository management, issue tracking, pull requests, and code collaboration. Provides comprehensive GitHub API access.",
      "command": "npx",
      "args": ["@modelcontextprotocol/server-github"],
      "tools": [
        "create_repository",
        "get_repository",
        "list_repositories",
        "create_issue",
        "list_issues",
        "create_pull_request"
      ]
    },
    {
      "id": "filesystem",
      "name": "Filesystem MCP",
      "type": "file_management",
      "description": "Filesystem MCP server for file and directory operations. Provides secure file system access with read, write, and directory management capabilities.",
      "command": "npx",
      "args": ["@modelcontextprotocol/server-filesystem"],
      "tools": [
        "read_file",
        "write_file",
        "create_directory",
        "list_directory",
        "delete_file"
      ]
    },
    {
      "id": "brave-search",
      "name": "Brave Search MCP",
      "type": "search",
      "description": "Web search MCP server for real-time web search capabilities. Provides access to current information and search results from the web.",
      "command": "npx",
      "args": ["@modelcontextprotocol/server-brave-search"],
      "tools": [
        "web_search",
        "search_results"
      ]
    },
    {
      "id": "slack",
      "name": "Slack MCP",
      "type": "communication",
      "description": "Slack MCP server for team communication and collaboration. Provides tools for sending messages, managing channels, and interacting with Slack workspaces.",
      "command": "npx",
      "args": ["@modelcontextprotocol/server-slack"],
      "tools": [
        "send_message",
        "list_channels",
        "get_channel_history",
        "create_channel"
      ]
    },
    {
      "id": "gmail",
      "name": "Gmail",
      "description": "A Model Context Protocol (MCP) server for Gmail integration in Claude Desktop with auto authentication support. Enables seamless email management for Gmail, offering secure features like email search, reading, and sending.",
      "tools": [
        {
          "name": "search_emails",
          "description": "Search for emails in Gmail using various criteria",
          "arguments": [
            {
              "name": "query",
              "type": "string",
              "required": true,
              "description": "Gmail search query (e.g., 'from:example@gmail.com', 'subject:meeting', 'is:unread')"
            },
            {
              "name": "max_results",
              "type": "number",
              "required": false,
              "description": "Maximum number of emails to return (default: 10)"
            }
          ]
        },
        {
          "name": "read_email",
          "description": "Read the content of a specific email",
          "arguments": [
            {
              "name": "email_id",
              "type": "string",
              "required": true,
              "description": "The ID of the email to read"
            }
          ]
        },
        {
          "name": "send_email",
          "description": "Send a new email",
          "arguments": [
            {
              "name": "to",
              "type": "string",
              "required": true,
              "description": "Recipient email address"
            },
            {
              "name": "subject",
              "type": "string",
              "required": true,
              "description": "Email subject"
            },
            {
              "name": "body",
              "type": "string",
              "required": true,
              "description": "Email body content"
            },
            {
              "name": "cc",
              "type": "string",
              "required": false,
              "description": "CC recipients (comma-separated)"
            }
          ]
        }
      ]
    },
    {
      "id": "google-drive",
      "name": "Google Drive",
      "description": "File access and search capabilities for Google Drive. Allows you to search, read, upload, and manage files in your Google Drive storage.",
      "tools": [
        {
          "name": "search_files",
          "description": "Search for files in Google Drive",
          "arguments": [
            {
              "name": "query",
              "type": "string",
              "required": true,
              "description": "Search query for files (e.g., 'name contains \"report\"', 'mimeType=\"application/pdf\"')"
            },
            {
              "name": "max_results",
              "type": "number",
              "required": false,
              "description": "Maximum number of files to return (default: 10)"
            }
          ]
        },
        {
          "name": "read_file",
          "description": "Read the content of a file from Google Drive",
          "arguments": [
            {
              "name": "file_id",
              "type": "string",
              "required": true,
              "description": "The ID of the file to read"
            }
          ]
        },
        {
          "name": "upload_file",
          "description": "Upload a file to Google Drive",
          "arguments": [
            {
              "name": "name",
              "type": "string",
              "required": true,
              "description": "Name of the file"
            },
            {
              "name": "content",
              "type": "string",
              "required": true,
              "description": "File content"
            },
            {
              "name": "parent_folder_id",
              "type": "string",
              "required": false,
              "description": "ID of the parent folder (optional)"
            }
          ]
        }
      ]
    },
    {
      "id": "google-calendar",
      "name": "Google Calendar",
      "description": "Integration with Google Calendar to check schedules, find time, and add/delete events. Manage your calendar events through natural language.",
      "tools": [
        {
          "name": "list_events",
          "description": "List upcoming calendar events",
          "arguments": [
            {
              "name": "time_min",
              "type": "string",
              "required": false,
              "description": "Start time for events (ISO format, default: now)"
            },
            {
              "name": "time_max",
              "type": "string",
              "required": false,
              "description": "End time for events (ISO format, default: 1 week from now)"
            },
            {
              "name": "max_results",
              "type": "number",
              "required": false,
              "description": "Maximum number of events to return (default: 10)"
            }
          ]
        },
        {
          "name": "create_event",
          "description": "Create a new calendar event",
          "arguments": [
            {
              "name": "summary",
              "type": "string",
              "required": true,
              "description": "Event title/summary"
            },
            {
              "name": "start_time",
              "type": "string",
              "required": true,
              "description": "Event start time (ISO format)"
            },
            {
              "name": "end_time",
              "type": "string",
              "required": true,
              "description": "Event end time (ISO format)"
            },
            {
              "name": "description",
              "type": "string",
              "required": false,
              "description": "Event description"
            },
            {
              "name": "location",
              "type": "string",
              "required": false,
              "description": "Event location"
            }
          ]
        },
        {
          "name": "delete_event",
          "description": "Delete a calendar event",
          "arguments": [
            {
              "name": "event_id",
              "type": "string",
              "required": true,
              "description": "ID of the event to delete"
            }
          ]
        }
      ]
    },
    {
      "id": "notion",
      "name": "Notion",
      "description": "Interact with Notion API. Search, Read, Update, and Create pages through Claude chat. Manage your Notion workspace content.",
      "tools": [
        {
          "name": "search_pages",
          "description": "Search for pages in Notion",
          "arguments": [
            {
              "name": "query",
              "type": "string",
              "required": true,
              "description": "Search query for pages"
            }
          ]
        },
        {
          "name": "read_page",
          "description": "Read the content of a Notion page",
          "arguments": [
            {
              "name": "page_id",
              "type": "string",
              "required": true,
              "description": "ID of the page to read"
            }
          ]
        },
        {
          "name": "create_page",
          "description": "Create a new Notion page",
          "arguments": [
            {
              "name": "title",
              "type": "string",
              "required": true,
              "description": "Page title"
            },
            {
              "name": "content",
              "type": "string",
              "required": true,
              "description": "Page content in markdown format"
            },
            {
              "name": "parent_id",
              "type": "string",
              "required": false,
              "description": "Parent page or database ID"
            }
          ]
        },
        {
          "name": "update_page",
          "description": "Update an existing Notion page",
          "arguments": [
            {
              "name": "page_id",
              "type": "string",
              "required": true,
              "description": "ID of the page to update"
            },
            {
              "name": "content",
              "type": "string",
              "required": true,
              "description": "New content for the page"
            }
          ]
        }
      ]
    },
    {
      "id": "puppeteer",
      "name": "Puppeteer",
      "description": "Browser automation and web scraping capabilities. Navigate websites, take screenshots, fill forms, and interact with web pages.",
      "tools": [
        {
          "name": "navigate",
          "description": "Navigate to a URL in the browser",
          "arguments": [
            {
              "name": "url",
              "type": "string",
              "required": true,
              "description": "URL to navigate to"
            }
          ]
        },
        {
          "name": "screenshot",
          "description": "Take a screenshot of the current page or element",
          "arguments": [
            {
              "name": "name",
              "type": "string",
              "required": true,
              "description": "Name for the screenshot"
            },
            {
              "name": "selector",
              "type": "string",
              "required": false,
              "description": "CSS selector for element to screenshot (optional)"
            },
            {
              "name": "width",
              "type": "number",
              "required": false,
              "description": "Screenshot width (default: 800)"
            },
            {
              "name": "height",
              "type": "number",
              "required": false,
              "description": "Screenshot height (default: 600)"
            }
          ]
        },
        {
          "name": "click",
          "description": "Click an element on the page",
          "arguments": [
            {
              "name": "selector",
              "type": "string",
              "required": true,
              "description": "CSS selector for element to click"
            }
          ]
        },
        {
          "name": "fill",
          "description": "Fill out an input field",
          "arguments": [
            {
              "name": "selector",
              "type": "string",
              "required": true,
              "description": "CSS selector for input field"
            },
            {
              "name": "value",
              "type": "string",
              "required": true,
              "description": "Value to fill in the field"
            }
          ]
        }
      ]
    },
    {
      "id": "memory",
      "name": "Memory",
      "description": "Knowledge graph-based persistent memory system. Store and retrieve information across conversations to maintain context and continuity.",
      "tools": [
        {
          "name": "store_memory",
          "description": "Store information in memory",
          "arguments": [
            {
              "name": "key",
              "type": "string",
              "required": true,
              "description": "Key to store the information under"
            },
            {
              "name": "value",
              "type": "string",
              "required": true,
              "description": "Information to store"
            },
            {
              "name": "category",
              "type": "string",
              "required": false,
              "description": "Category for organizing memories"
            }
          ]
        },
        {
          "name": "retrieve_memory",
          "description": "Retrieve information from memory",
          "arguments": [
            {
              "name": "key",
              "type": "string",
              "required": false,
              "description": "Specific key to retrieve (optional)"
            },
            {
              "name": "query",
              "type": "string",
              "required": false,
              "description": "Search query for memories"
            },
            {
              "name": "category",
              "type": "string",
              "required": false,
              "description": "Category to search within"
            }
          ]
        },
        {
          "name": "list_memories",
          "description": "List all stored memories",
          "arguments": [
            {
              "name": "category",
              "type": "string",
              "required": false,
              "description": "Filter by category (optional)"
            }
          ]
        }
      ]
    }
  ]
} 